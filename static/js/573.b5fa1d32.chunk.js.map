{"version":3,"file":"static/js/573.b5fa1d32.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Modall/Modal.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Modall/ModalAdd.jsx","components/ContactList/ContactList.jsx","components/Loader/Loader.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContact = state => state.contacts.items;\n\nexport const selectedFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterContact = createSelector(\n  [getContact, selectedFilter],\n  (items, filter) =>\n    items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 25px;\n  padding: 35px 0;\n`;\n\nexport const SectionHeader = styled.div`\n  display: flex;\n  align-items: center;\n  width: 50%;\n  justify-content: space-between;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  gap: 25px;\n  width: 50%;\n  margin: 16px auto;\n  padding: 0;\n`;\n\nexport const ItemWrap = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid #7e8fdd;\n`;\n\nexport const ContactInner = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const Name = styled.p`\n  margin: 0 0 3px 0;\n  color: #000;\n  font-size: 15px;\n  font-weight: 700;\n`;\n\nexport const Number = styled.p`\n  margin: 0;\n  color: rgba(0, 0, 0, 0.54);\n  font-size: 14px;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  background: transparent;\n  border: none;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  border-radius: 80px;\n  border: 2px solid #7e8fdd;\n  padding: 12px 0 12px 20px;\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { filterContact } from \"../../redux/contacts/filterSlice\";\nimport { selectedFilter } from \"../../redux/contacts/selectors\";\nimport { Input } from \"./Filter.styled\";\n\nconst Filter = () =>{\n\n\n    const filter = useSelector(selectedFilter);\n    const dispatch = useDispatch();\n  \n    const filteredContact = event => {\n      dispatch(filterContact(event.target.value.toLowerCase()));\n    };\n  \n\n    return (\n        <label >\n          <Input\n            type=\"text\"\n            value={filter}\n            placeholder=\"Find contacts by name\" \n            onChange={filteredContact}\n          ></Input>\n        </label>\n      );  \n}\n\nexport default Filter;","import styled from 'styled-components';\n\nexport const ButtonOpen = styled.button`\n  border: 2px solid #9cdfdf;\n  border-radius: 50%;\n  background: transparent;\n  cursor: pointer;\n`;\n\nexport const ButtonClose = styled.button`\n  border: none;\n  background: transparent;\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding-top: 15px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  border-radius: 80px;\n  border: 2px solid #7e8fdd;\n  padding: 12px 0 12px 20px;\n`;\n\nexport const ButtonSubmit = styled.button`\n  border-radius: 12px;\n  background: #9cdfdf;\n  padding: 11px 22px;\n  border: none;\n  cursor: pointer;\n  color: #fdfdff;\n  font-size: 14px;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/options\";\nimport { getContact} from \"../../redux/contacts/selectors\";\nimport shortid from 'shortid';\nimport { ButtonSubmit, Form, Input } from \"./ContactForm.styled\";\n\nconst ContactForm = ({closeModal}) => {\n    const contacts = useSelector(getContact);\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n  \n    const nameInputId = shortid.generate();\n    const numberInputId = shortid.generate();\n  \n    const handleAddContact = (name, number) => {\n      const contact = {\n        id: shortid.generate(),\n        name: name,\n        number: number,\n      };\n  \n      const saveContact = contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n  \n      if (saveContact) {\n        alert(`${name} is already in contacts`);\n        return;\n      }\n  \n      const saveNumber = contacts.some(contact => contact.number === number);\n  \n      if (saveNumber) {\n        alert(`${number} is already in contacts`);\n        return;\n      }\n  \n      dispatch(addContact(contact));\n    };\n  \n    const handleChangeName = event => {\n      setName(event.target.value);\n    };\n  \n    const handleChangeNumber = event => {\n      setNumber(event.target.value);\n    };\n  \n    const handleSubmit = event => {\n      event.preventDefault();\n      setName('');\n      setNumber('');\n      handleAddContact(name, number);\n      closeModal();\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n          <label htmlFor={nameInputId}>\n            <Input\n              placeholder=\"Name\"\n              value={name}\n              type=\"text\"\n              required\n              id={nameInputId}\n              onChange={handleChangeName}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            />\n          </label>\n          <label htmlFor={numberInputId} >\n            <Input\n            placeholder=\"Number\"\n              value={number}\n              required\n              type=\"number\"\n              onChange={handleChangeNumber}\n              id={numberInputId}\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            />\n          </label>\n          <ButtonSubmit type=\"submit\">\n            Add contact\n          </ButtonSubmit>\n        </Form>\n      );\n    }\n    \n    export default ContactForm;","import React from 'react';\nimport Modal from 'react-modal';\nimport { HiOutlinePlus } from \"react-icons/hi2\";\nimport { FaWindowClose } from 'react-icons/fa';\nimport {ButtonClose, ButtonOpen } from './Modal.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\n\n  Modal.setAppElement('#root');\n\nconst ModalAdd = () => {\n\nconst [modalIsOpen, setModalOpen] = React.useState(false);\n\nfunction openModal() {\n    setModalOpen(true);\n  }\n\nfunction closeModal(){\n    setModalOpen(false);\n}\n\n    return(\n     <div>\n<ButtonOpen onClick={openModal} type='button'><HiOutlinePlus  size={30} color='#9cdfdf'/></ButtonOpen>\n        <Modal\n  style={customStyles}\n  isOpen={modalIsOpen}\n  contentLabel=\"Example Modal\"\n  onRequestClose={closeModal}\n>  \n<ButtonClose onClick={closeModal} type='button'>\n<FaWindowClose size={30} color='#6E7FCF'/>\n</ButtonClose>\n<ContactForm closeModal={closeModal}/>\n</Modal>\n       </div>\n    );\n  }\n\n\n  export default ModalAdd;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deletedContact } from '../../redux/contacts/options';\nimport { selectFilterContact } from '../../redux/contacts/selectors';\nimport {  Button, ContactInner, ItemWrap, List, Name, Number, Section, SectionHeader } from './ContactList.styled';\nimport { FcReddit } from \"react-icons/fc\";\nimport { MdOutlineDeleteOutline } from \"react-icons/md\";\nimport Filter from 'components/Filter/Filter';\nimport ModalAdd from 'components/Modall/ModalAdd';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectFilterContact);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = contactId => {\n    dispatch(deletedContact(contactId));\n  };\n\n  return (\n    <Section>\n        <SectionHeader>\n           <Filter />\n             <ModalAdd/>   \n        </SectionHeader>\n \n    <List>  \n      {contacts.map(contact => (\n        <ItemWrap key={contact.id}>\n            <ContactInner>\n            <FcReddit size={25} />\n            <div>\n                <Name> {contact.name}</Name>\n                <Number>{contact.number}</Number>\n            </div>\n            </ContactInner>\n          <Button onClick={() => handleDeleteContact(contact.id)}>\n          <MdOutlineDeleteOutline color='#7e8fdd' size={25} />\n          </Button>\n        </ItemWrap>\n      ))}\n    </List>\n    </Section>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div style={{ zIndex: '1000', position: 'fixed', left: '45%', top: '44%' }}>\n      <Circles\n        height=\"160\"\n        width=\"160\"\n        color=\"#9CDFDF\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/options';\nimport {\n  getContact,\n  selectError,\n  selectIsLoading,\n} from '../redux/contacts/selectors';\nimport ContactList from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const contacts = useSelector(getContact);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p>❌ Something went wrong - {error}</p>}\n      {contacts.length > 0 && <ContactList />}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContact","state","contacts","items","selectedFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilterContact","createSelector","contact","name","toLowerCase","includes","Section","styled","_templateObject","_taggedTemplateLiteral","SectionHeader","_templateObject2","List","_templateObject3","ItemWrap","_templateObject4","ContactInner","_templateObject5","Name","_templateObject6","Number","_templateObject7","Button","_templateObject8","Input","useSelector","dispatch","useDispatch","_jsx","children","type","value","placeholder","onChange","event","filterContact","target","ButtonOpen","ButtonClose","Form","ButtonSubmit","_ref","closeModal","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","nameInputId","shortid","numberInputId","_jsxs","onSubmit","preventDefault","id","saveContact","some","alert","concat","saveNumber","addContact","handleAddContact","htmlFor","required","pattern","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","_React$useState","React","_React$useState2","modalIsOpen","setModalOpen","onClick","HiOutlinePlus","size","color","style","isOpen","contentLabel","onRequestClose","FaWindowClose","ContactForm","Filter","ModalAdd","map","FcReddit","contactId","deletedContact","MdOutlineDeleteOutline","zIndex","position","Circles","height","width","ariaLabel","wrapperStyle","wrapperClass","visible","useEffect","fetchContacts","Loader","length","ContactList"],"sourceRoot":""}